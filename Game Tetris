package javafxapplication24;

import javafx.animation.AnimationTimer;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.Scene;
import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.input.KeyCode;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.stage.Stage;

import java.net.URL;
import java.util.ResourceBundle;

public class FXMLDocumentController implements Initializable {

    @FXML
    private Label label;
    @FXML
    private Button button;
    @FXML
    private Canvas canvas;

    private BasePiece currentPiece;
    private static final int TILE_SIZE = 30;
    private static final int WIDTH = 10, HEIGHT = 20;
    private static final int[][] GRID = new int[WIDTH][HEIGHT];
    private static int score = 0;
    private boolean gameOver = false;

    private double pieceY = 0; n
    private double dropSpeed = 0.05; 

    abstract class BasePiece {
        protected int[][] shape;
        protected int x, y;

        public BasePiece(int[][] shape) {
            this.shape = shape;
            this.x = WIDTH / 2 - shape[0].length / 2;
            this.y = 0;
        }

        public int[][] getShape() {
            return shape;
        }

        public int getX() {
            return x;
        }

        public int getY() {
            return y;
        }

        public void move(int dx) {
            x += dx;
        }

        public void drop() {
            y += 1;
        }

        public abstract void rotate();

        public void draw(GraphicsContext gc, double smoothY) {
            gc.setFill(Color.RED);
            for (int i = 0; i < shape.length; i++) {
                for (int j = 0; j < shape[i].length; j++) {
                    if (shape[i][j] == 1) {
                        gc.fillRect((x + j) * TILE_SIZE, (smoothY + i) * TILE_SIZE, TILE_SIZE, TILE_SIZE);
                    }
                }
            }
        }
    }
