package javafxapplication24;

import java.net.URL;
import java.util.ResourceBundle;
import javafx.animation.AnimationTimer;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.input.KeyCode;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.stage.Stage;
import javafx.scene.Scene;

public class DashboardController implements Initializable {

    @FXML
    private Button startButton;

    private Canvas canvas;
    private static final int TILE_SIZE = 30;
    private static final int WIDTH = 10, HEIGHT = 20;
    private static final int[][] GRID = new int[WIDTH][HEIGHT];
    private static int score = 0;
    private boolean gameOver = false;

    private BasePiece currentPiece;
    private double pieceY = 0;
    private double dropSpeed = 0.05;

    @FXML
    void mouseEnter(MouseEvent event) {
        startButton.setStyle("-fx-background-color: linear-gradient(to bottom, #ff3565, #ff7eb3); -fx-text-fill: white; -fx-font-size: 16px; -fx-font-weight: bold; -fx-background-radius: 10;");
    }

    @FXML
    void mouseExit(MouseEvent event) {
        startButton.setStyle("-fx-background-color: linear-gradient(to bottom, #ff7eb3, #ff758c); -fx-text-fill: white; -fx-font-size: 16px; -fx-font-weight: bold; -fx-background-radius: 10;");
    }

    @FXML
    private void berangkat(ActionEvent event) {
        Stage stage = (Stage) startButton.getScene().getWindow();
        start(stage); 
    }

    @Override
    public void initialize(URL url, ResourceBundle rb) {
        // Inisialisasi canvas
        canvas = new Canvas(WIDTH * TILE_SIZE, HEIGHT * TILE_SIZE);
    }

    public void start(Stage stage) {
        VBox root = new VBox();
        root.getChildren().add(canvas);

        GraphicsContext gc = canvas.getGraphicsContext2D();
        Scene scene = new Scene(root);
        stage.setTitle("Tetris Game");
        stage.setScene(scene);
        stage.show();

        startNewPiece();

        new AnimationTimer() {
            long lastTick = System.nanoTime();

            @Override
            public void handle(long now) {
                double elapsedTime = (now - lastTick) / 1e9; // Seconds
                lastTick = now;
                tick(gc, elapsedTime);
            }
        }.start();

        scene.setOnKeyPressed(event -> {
            if (event.getCode() == KeyCode.LEFT) {
                move(-1);
            } else if (event.getCode() == KeyCode.RIGHT) {
                move(1);
            } else if (event.getCode() == KeyCode.DOWN) {
                dropFaster();
            }
        });

        scene.setOnKeyReleased(event -> {
            if (event.getCode() == KeyCode.DOWN) {
                resetDropSpeed();
            }
        });
    }
